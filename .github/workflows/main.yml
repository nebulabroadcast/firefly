name: Build windows binary

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Build exe with pyinstaller
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry config virtualenvs.create false
          poetry install --no-interaction --no-ansi
          make build_windows

      - name: Get the version
        id: get_version
        uses: SebRollen/toml-action@v1.0.1
        with:
          file: 'pyproject.toml'
          field: 'tool.poetry.version'

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.value }}
          release_name: Release v${{ steps.get_version.outputs.value }}
          draft: true
          prerelease: false

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: firefly-${{ steps.get_version.outputs.value }}-win.zip
          asset_name: firefly-${{ steps.get_version.outputs.value }}-win.zip
          asset_content_type: application/octet-stream
      #               
      # - name: Upload Artifact
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: firefly-windows
      #     path: *.zip
      #
